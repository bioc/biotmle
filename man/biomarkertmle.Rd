% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biotmle.R
\name{biomarkertmle}
\alias{biomarkertmle}
\title{Biomarker Evaluation with Targeted Minimum Loss Estimation of the ATE}
\usage{
biomarkertmle(
  se,
  varInt,
  normalized = TRUE,
  ngscounts = FALSE,
  parallel = TRUE,
  bppar_type = NULL,
  future_param = NULL,
  bppar_debug = FALSE,
  cv_folds = 1,
  g_lib = c("SL.mean", "SL.glm", "SL.bayesglm", "SL.glmnet"),
  Q_lib = c("SL.mean", "SL.bayesglm", "SL.earth", "SL.xgboost"),
  ...
)
}
\arguments{
\item{se}{A \code{SummarizedExperiment} containing microarray expression
or next-generation sequencing data in the \code{assays} slot and a matrix
of phenotype-level data in the \code{colData} slot.}

\item{varInt}{A \code{numeric} indicating the column of the design matrix
corresponding to the treatment or outcome of interest (in the
\code{colData} slot of the \code{SummarizedExperiment} argument "se").}

\item{normalized}{A \code{logical} indicating whether the data included in
the \code{assay} slot of the input \code{SummarizedExperiment} object has
been normalized externally. The default is set to \code{TRUE} with the
expectation that an appropriate normalization method has been applied. If
set to \code{FALSE}, median normalization is performed for microarray data.}

\item{ngscounts}{A \code{logical} indicating whether the data are counts
generated from a next-generation sequencing experiment (e.g., RNA-seq). The
default setting assumes continuous expression measures as generated by
microarray platforms.}

\item{parallel}{A \code{logical} of whether or not to use parallelization in
the estimation procedure. Invoking parallelization happens through a
combination of calls to \pkg{future} and \pkg{BiocParallel}. If this
argument is set to \code{TRUE}, \code{\link[future]{multiprocess}} is used,
and, if \code{FALSE}, \code{\link[future]{sequential}} is used, alongside
\code{\link[BiocParallel]{bplapply}}. Other options for evaluation through
futures may be invoked by setting the argument \code{future_param}.}

\item{bppar_type}{A \code{character} specifying the type of parallelization
backend to be invoked by \code{BiocParallel}. Consult the manual page for
\code{\link[BiocParallel]{BiocParallelParam}} for possible types and
descriptions on their appropriate uses. The default for this argument is
\code{NULL}, which silently uses \code{\link[BiocParallel]{DoparParam}}.}

\item{future_param}{A \code{character} specifying the parallelization type
to be invoked when using futures for evaluation. For a list of available
types, please consult the documentation for \code{\link[future]{plan}}. The
default setting (this argument set to \code{NULL}) silently invokes
\code{\link[future]{multiprocess}}.}

\item{bppar_debug}{A \code{logical} indicating whether or not to rely upon
pkg{BiocParallel}. Setting this argument to \code{TRUE}, replaces the call
to \code{\link[BiocParallel]{bplapply}} by a call to \code{lapply}, which
significantly reduces the overhead of debugging. Note that invoking this
option overrides all other parallelization arguments.}

\item{cv_folds}{A \code{numeric} scalar indicating how many folds to use in
performing targeted minimum loss estimation. Cross-validated estimates have
been demonstrated to allow relaxation of certain theoretical conditions and
and accommodate the construction of more conservative variance estimates.}

\item{g_lib}{A \code{character} vector specifying the library of machine
learning algorithms for use in fitting the propensity score P(A = a | W).}

\item{Q_lib}{A \code{character} vector specifying the library of machine
learning algorithms for use in fitting the outcome regression E[Y | A,W].}

\item{...}{Additional arguments to be passed to \code{\link[drtmle]{drtmle}}
in computing the targeted minimum loss estimator of the average treatment
effect.}
}
\value{
S4 object of class \code{biotmle}, inheriting from
 \code{SummarizedExperiment}, with additional slots \code{tmleOut} and
 \code{call}, among others, containing TML estimates of the ATE of exposure
 on biomarker expression.
}
\description{
Computes the causal target parameter defined as the difference between the
biomarker expression values under treatment and those same values under no
treatment, using Targeted Minimum Loss Estimation.
}
\examples{
library(dplyr)
library(biotmleData)
library(SuperLearner)
library(SummarizedExperiment)
data(illuminaData)

colData(illuminaData) <- colData(illuminaData) \%>\%
  data.frame() \%>\%
  dplyr::mutate(age = as.numeric(age > median(age))) \%>\%
  DataFrame()
benz_idx <- which(names(colData(illuminaData)) \%in\% "benzene")

biomarkerTMLEout <- biomarkertmle(
  se = illuminaData[1:2, ],
  varInt = benz_idx,
  parallel = FALSE,
  g_lib = c("SL.mean", "SL.glm"),
  Q_lib = c("SL.bayesglm", "SL.glmnet")
)
}
