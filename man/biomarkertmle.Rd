% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biomarkertmle.R
\name{biomarkertmle}
\alias{biomarkertmle}
\title{Biomarker Evaluation with Targeted Minimum Loss-Based Estimation (TMLE)}
\usage{
biomarkertmle(se, varInt, type = c("exposure", "outcome"), parallel = TRUE,
  family = "gaussian", g_lib = c("SL.glm", "SL.randomForest", "SL.nnet",
  "SL.polymars", "SL.mean"), Q_lib = c("SL.glm", "SL.randomForest", "SL.nnet",
  "SL.mean"))
}
\arguments{
\item{se}{(SummarizedExperiment) - containing expression or next-generation
sequencing data in the "assays" slot and a matrix of phenotype-level
data in the "colData" slot.}

\item{varInt}{(numeric) - indicating the column of the design matrix
corresponding to the treatment or outcome of interest (in the
"colData" slot of the "se" argument above).}

\item{type}{(character) - choice of the type of TMLE to perform: "exposure"
to identify biomarkers related to an exposure (input as A), or
"outcome" to identify biomarkers related to an outcome (input as Y).}

\item{parallel}{(logical, numeric) - whether to use or the number of cores to
be used when the TMLE-based estimation procedure is parallelized.}

\item{family}{(character) - specification of error family: "binomial" or
"gaussian".}

\item{g_lib}{(char vector) - library of learning algorithms to be used in
fitting the "g" step of the standard TMLE procedure.}

\item{Q_lib}{(char vector) - library of learning algorithms to be used in
fitting the "Q" step of the standard TMLE procedure.}
}
\value{
S4 object of class \code{biotmle}, generated by sub-classing
        \code{SummarizedExperiment}, with additional slots containing
        \code{tmleOut} and \code{call}, among others, containing TMLE-based
        estimates of the relationship between a biomarker and exposure or
        outcome variable and the original call to this function (for user
        reference), respectively.
}
\description{
Computes the causal target parameter defined as the difference between the
biomarker expression values under treatment and those same values under no
treatment, using Targeted Minimum Loss-Based Estimation.
}
\examples{
library(dplyr)
library(biotmleData)
data(illuminaData)
library(SummarizedExperiment)
"\%ni\%" = Negate("\%in\%")

colData(illuminaData) <- colData(illuminaData) \%>\%
     data.frame \%>\%
     dplyr::mutate(age = as.numeric(age > median(age))) \%>\%
     DataFrame

varInt_index <- which(names(colData(illuminaData)) \%in\% "benzene")

biomarkerTMLEout <- biomarkertmle(se = illuminaData[1:5, ],
                                  varInt = varInt_index,
                                  type = "exposure",
                                  parallel = 1,
                                  family = "gaussian",
                                  g_lib = c("SL.mean", "SL.glm"),
                                  Q_lib = c("SL.mean", "SL.glm")
                                 )

}
